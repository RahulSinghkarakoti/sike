datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  rooms    UserRoom[]
  chatRooms ChatRoom[]
  messages Message[]
   createdAt DateTime @default(now())
  lastSeen  DateTime @updatedAt
  nickname  String? 
}

model UserRoom {
  id         Int      @id @default(autoincrement())
  userId     String
  roomId     Int
  created_at DateTime @default(now())

  user User   @relation(fields: [userId], references: [id])
  room ChatRoom @relation(fields: [roomId], references: [id])

  @@unique([userId, roomId]) // prevents duplicate memberships
}

model ChatRoom {
  id             Int       @id @default(autoincrement())
  name           String
  slug           String    @unique
  lock           Boolean   @default(false)
  last_message_at DateTime?
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt

  createdById String
  createdBy   User @relation(fields: [createdById], references: [id])

  members  UserRoom[]
  messages Message[]
}

model Message {
  id         Int      @id @default(autoincrement())
  roomId     Int
  senderId   String
  receiverId Int?     // optional (for private DM inside a room)
  text       String?
  fileUrl    String?
  status     Message_Status @default(Sent)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  room   ChatRoom @relation(fields: [roomId], references: [id])
  sender User     @relation(fields: [senderId], references: [id])
}

enum Message_Status {
  Sent
  Delivered
  Read
}
